type Query {
    self: User!
    stats: Stats!
}

# User
type User {
    id: ID!
    name: String!
    role: UserRole!
    country: String
}

type UserRole {
    id: ID!
    name: String!
}

# Stats
type Stats {
    users: Int!
    organizations: Int!
    projects: Int!
    translations: Int!
    historical: HistoricalData!
}

type HistoricalData {
    translations: GraphData!
}

# Graphs
type GraphData {
    datasets: [GraphDataset!]!
}

type GraphDataset {
    date: Int!
    value: Int!
}

type Mutation {
    createUser(input: CreateUserInput!): String!
    login(input: UserInput!): String!
}

# User
input CreateUserInput {
    name: String!
    password: String!
    code: String!
}

input UserInput {
    name: String!
    password: String!
}